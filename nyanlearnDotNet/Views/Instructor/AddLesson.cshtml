@model IList<Course>
<div class="content-wrapper">
    @{
        string jsonData = Newtonsoft.Json.JsonConvert.SerializeObject(Model);
    }
    <div style="width: 70%; margin:auto; padding:5% 0%;">
        <h1>Create Lesson</h1>
        <form action="/Instructor/Lesson/Add" method="POST" enctype="multipart/form-data">


            <div class="mb-3 teacher-inputs">
                <label class="form-label">Courses</label>
                <select class="form-control" name="CourseId" id="courses_dd">
                    <option></option>
                </select>
            </div>

            <div class="mb-3 teacher-inputs">
                <label class="form-label">Name</label>
                <input type="text" class="form-control" name="Name" placeholder="Lesson Name" required>
            </div>

            <textarea id="mytextarea" name="Description" placeholder="Enter description"></textarea>


             <div class="mb-3 teacher-inputs">
                <label class="form-label">Video / Photo</label>
                <select class="form-control" id="fileOptions_dd">
                    <option value="local">Upload File</option>
                    <option value="cloud">Insert Link</option>
                </select>

                <div id="fileUpload">
                    <input type="file" class="form-control" name="File">
                </div>

            </div>

            <div style="display:none;">
                <input type="text" name="CourseName">
            </div>


            <div class=" teacher-inputs">
                <div class="row">
                    <div class="controlBtns">
                        <input type="submit" class="btn btn-success" value="Entry" />
                    </div>
                    <div class="controlBtns">
                        <input type="reset" class="btn btn-secondary" value="Cancel" />
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>
<script>
    tinymce.init({
      selector: 'textarea',
      plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed linkchecker a11ychecker tinymcespellchecker permanentpen powerpaste advtable advcode editimage tinycomments tableofcontents footnotes mergetags autocorrect typography inlinecss',
      toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
      tinycomments_mode: 'embedded',
      tinycomments_author: 'Author name',
      mergetags_list: [
        { value: 'First.Name', title: 'First Name' },
        { value: 'Email', title: 'Email' },
      ]
    });


    let data = @Html.Raw(jsonData);
    console.log(data);


    let fileOptions_dd = document.getElementById("fileOptions_dd");
    let fileUpload = document.getElementById("fileUpload");

     fileOptions_dd.addEventListener("change", (event) => {
        if (event.target.value === "local") {
            fileUpload.innerHTML = '<input type="file" class="form-control" name="File">'
        }
        else if(event.target.value === "cloud"){
            fileUpload.innerHTML = '<input type="text" placeholder="Paste file link" class="form-control" name="FilePath">'
        }
     });




    let courses_dd = document.getElementById("courses_dd");



    for (let i = 0; i <= data.length; i++) {
        courses_dd.innerHTML += `<option value="${data[i].Id}">${data[i].Name}</option>`;
    }





    // function clickedNRCode(code) {
    //     name_en_dd.innerHTML = "";
    //     let temp = data.filter((d) => d.nrc_code === parseInt(code)).sort();
    //     console.log(temp);
    //     for (let i = 0; i < temp.length; i++) {
    //         name_en_dd.innerHTML += `<option value="${temp[i].name_en}">${temp[i].name_en}</option>`;
    //     }

    // }
</script>